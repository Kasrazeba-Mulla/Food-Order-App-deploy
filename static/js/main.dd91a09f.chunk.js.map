{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/AvailableMeals.module.css","components/Meals/MealItem/MealItem.module.css","components/UI/Modal.module.css","components/Layout/Header.module.css","components/Meals/MealsSummary.module.css","components/UI/Card.module.css","components/Meals/MealItem/MealItemForm.module.css","components/Input.module.css","assets/meals.jpg","components/Cart/CartIcon.js","store/cart-context.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/Meals/MealsSummary.js","components/UI/Card.js","components/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal.js","components/Cart/Checkout.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","useState","btnIsHighlighted","setBtnIsHighlighted","useContext","numberOfCartItems","reduce","curNumber","amount","btnClasses","styles","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","header","onShowCart","src","mealsImg","alt","MealsSummary","summary","Card","classes","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","action","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","cartCtx","price","toFixed","meal","name","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","a","fetch","response","ok","Error","json","key","responseData","loadedMeals","push","catch","error","message","MealsLoading","MealsError","mealsList","map","Meals","Fragment","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","isEmpty","Checkout","street","city","postalCode","formInputsValidity","setformInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","onConfirm","ppostalCode","actions","onCancel","submit","CartItem","onRemove","onAdd","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","method","body","JSON","stringify","user","orderedItems","cartItems","bind","modalActions","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","defaultCartState","cartReducer","state","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","existingItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.dd91a09f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__3lWuE\",\"control\":\"Checkout_control__3UJUu\",\"actions\":\"Checkout_actions__3abxw\",\"submit\":\"Checkout_submit__3K72P\",\"invalid\":\"Checkout_invalid__36SJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__26gof\",\"total\":\"Cart_total__nWu48\",\"actions\":\"Cart_actions__3msJF\",\"button--alt\":\"Cart_button--alt__2TaBY\",\"button\":\"Cart_button__3XYTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1mUWr\",\"summary\":\"CartItem_summary__3mAWb\",\"price\":\"CartItem_price__3bNEl\",\"amount\":\"CartItem_amount__3iSrI\",\"actions\":\"CartItem_actions__KRH3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__nqyNL\",\"icon\":\"HeaderCartButton_icon__1GF-s\",\"badge\":\"HeaderCartButton_badge__1rCRc\",\"bump\":\"HeaderCartButton_bump__CYRzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__1aNpp\",\"meals-appear\":\"AvailableMeals_meals-appear__3QQ4Z\",\"MealsLoading\":\"AvailableMeals_MealsLoading__1E0w4\",\"MealsError\":\"AvailableMeals_MealsError__1Wm2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__1oxek\",\"description\":\"MealItem_description__1q5t8\",\"price\":\"MealItem_price__3xIbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3N9_F\",\"modal\":\"Modal_modal__39Csx\",\"slide-down\":\"Modal_slide-down__30pKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Dwb5\",\"main-image\":\"Header_main-image__2ZhPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__2JRog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1locI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2SBsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__4cg4Q\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CartIcon;\r\n","import React from \"react\";\r\n\r\nconst CartContext = React.createContext({\r\n  //items within these objects are default values\r\n  items: [],\r\n  totalAmount: 0,\r\n  addItem: (item) => {},\r\n  removeItem: (id) => {},\r\n  clearCart: () => {},\r\n});\r\n\r\nexport default CartContext;\r\n","import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport styles from \"./HeaderCartButton.module.css\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const { items } = cartCtx; //object destructuring to pull out items from the cart\r\n\r\n  const numberOfCartItems = items.reduce((curNumber, items) => {\r\n    return curNumber + items.amount;\r\n  }, 0);\r\n\r\n  const btnClasses = `${styles.button} ${btnIsHighlighted ? styles.bump : \"\"}`;\r\n\r\n  useEffect(() => {\r\n    if (items.length === 0) {\r\n      return;\r\n    }\r\n    setBtnIsHighlighted(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [items]);\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={styles.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={styles.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n","import { Fragment } from \"react\";\r\nimport mealsImg from \"../../assets/meals.jpg\";\r\nimport styles from \"./Header.module.css\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <header className={styles.header}>\r\n        <h1>React Meals</h1>\r\n        <HeaderCartButton onClick={props.onShowCart} />\r\n      </header>\r\n      {/* div will hold the image  */}\r\n      <div className={styles[\"main-image\"]}>\r\n        <img src={mealsImg} alt=\"Delicacies!!\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styles from \"./MealsSummary.module.css\";\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={styles.summary}>\r\n      <h2>Delicious food , its finger likin gooood</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;\r\n","import classes from \"./Card.module.css\";\r\n\r\n// card is just a wrapper component used to add css styling\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={classes.card}>\r\n      {props.children}{\" \"}\r\n      {/* whatever is wrapped inside the opening and closing tags of Card component is brought here  */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={classes.input}>\r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input ref={ref} {...props.input} />\r\n    </div>\r\n  );\r\n});\r\nexport default Input;\r\n","import { useRef, useState } from \"react\";\r\nimport classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../../Input\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault(); //prevents browser reloading whenever form is submitted\r\n    const enteredAmount = amountInputRef.current.value; //amountInputRef.current.value is a string\r\n    const enteredAmountNumber = +enteredAmount; //converts enteredAmount string to number\r\n\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form action=\"\" className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\" /* min and max are already available attributes for the input prop */,\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && <p>PLease enter a valid amount (1-5).!</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","import { useContext } from \"react\";\r\nimport CartContext from \"../../../store/cart-context\";\r\nimport classes from \"./MealItem.module.css\";\r\nimport MealItemForm from \"./MealItemForm\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const price = `$${props.price.toFixed(2)}`; //precision is set to 2 places after decimal\r\n\r\n  const addItemToCartHandler = (amount) => {\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      amount: amount,\r\n      price: props.price,\r\n    });\r\n  };\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{props.name}</h3>\r\n        <div className={classes.description}>{props.description}</div>\r\n        <div className={classes.price}>{price}</div>\r\n      </div>\r\n      <div>\r\n        <MealItemForm id={props.id} onAddToCart={addItemToCartHandler} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import styles from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  //initial loading state is true becausethe useEffect runs the 1st time component is loaded and thus , we are loading data\r\n  const [httpError, setHttpError] = useState();\r\n  //no initial value for httpError state so useState parameter is empty or null\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch(\r\n        \"https://food-order-app-cd379-default-rtdb.firebaseio.com/meals.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      //we are throwing a new error so the lines below won't execute\r\n\r\n      const responseData = await response.json();\r\n      // response.json(); also returns a promise , hence, we add await\r\n      const loadedMeals = [];\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n\r\n    //.json is firebase specific to add\r\n    //we are sending the request to the url (fetch api endpoint)\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={styles.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={styles.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={styles.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","// groups MealsSummmary and AvailableMeals components together\r\n\r\nimport React from \"react\";\r\nimport MealsSummary from \"./MealsSummary\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\n\r\nfunction Meals() {\r\n  return (\r\n    <React.Fragment>\r\n      <MealsSummary />\r\n      <AvailableMeals />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Meals;\r\n","import { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import classes from \"./Checkout.module.css\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isSixChars = (value) => value.trim().length === 6;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setformInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n  //true and false determine whether the fields are valid or not !\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\r\n\r\n    setformInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    //submit the cart data\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      ppostalCode: enteredPostalCode,\r\n    });\r\n  };\r\n  //setting classes on form ele dynamically!\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal code!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import React, { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Checkout from \"./Checkout\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    //we want to wait for the fetch function to finish executing , so we await\r\n    await fetch(\r\n      \"https://food-order-app-cd379-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(\r\n            null,\r\n            item.id\r\n          )} /* ensures that item.id is passed to cartItemRemoveHandler */\r\n          onAdd={cartItemAddHandler.bind(\r\n            null,\r\n            item\r\n          )} /* bind preconfigures a function for future execution and allows\r\n          u to pre-configure(i.e. pre arrange) the argument that function will recieve when it is beind executed */\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n      {/* the button is rendered only if the cart has items in it !! */}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Submitting order data...</p>;\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Order sent successfully!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","//goal of this component - to manage the cart cart context data and provide\r\n//that context to all the components that want to access it .\r\n\r\nimport { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.amount * action.item.price;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    // findIndex() built-in in JS which finds the index of an item in the array.\r\n    //it expects a function as arg that returns true\r\n    //if thats the item we are lookin for otherwise false\r\n    //if the function returns true , the correspinding index is returned\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex]; //access the existing item\r\n\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount, //update the amount\r\n        //action.item consists of the name , the amount of items,price , all info about items\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    }; //return our new state\r\n  }\r\n  if (action.type === \"DELETE\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id); //returns a new array based on the specific conditions\r\n      //all items with item.id!==action.id are kept but item for which tem.id===action.id is removed\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"DELETE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","import Header from \"./components/Layout/Header\";\nimport React, { useState } from \"react\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\n      {/* Cart component is rendered iff cartIsShown is truthy*/}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}